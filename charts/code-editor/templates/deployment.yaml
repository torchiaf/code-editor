{{- range $s := .Values.users }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: code-editor-{{ $s.name }}
  labels:
    app.kubernetes.io/name: {{ include "code-editor.name" $ }}
    helm.sh/chart: {{ include "code-editor.chart" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.code-editor/path: {{ $s.path }}
spec:
  replicas: {{ $.Values.codeServer.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "code-editor.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.code-editor/path: {{ $s.path }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "code-editor.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.code-editor/path: {{ $s.path }}
    spec:
      imagePullSecrets: {{- toYaml $.Values.codeServer.imagePullSecrets | nindent 8 }}
      {{- if $.Values.codeServer.hostnameOverride }}
      hostname: {{ $.Values.codeServer.hostnameOverride }}
      {{- end }}
      {{- if $.Values.codeServer.priorityClassName }}
      priorityClassName: {{ $.Values.codeServer.priorityClassName }}
      {{- end }}
      {{- if $.Values.codeServer.securityContext.enabled }}
      securityContext:
        fsGroup: {{ $.Values.codeServer.securityContext.fsGroup }}
      {{- end }}
      {{- if and $.Values.codeServer.fetchGitSource.enabled }}
      initContainers:
      - name : ssh
        image: kroniak/ssh-client
        command: ['/bin/sh', '-c', "cp /ssh/id_ed25519 /etc/ssh-key/id_ed25519 && ssh-keyscan -t ed25519 github.com >> /etc/ssh-key/known_hosts && chown -R 1000:1000 /etc/ssh-key && chmod 700 /etc/ssh-key/id_ed25519"]
        volumeMounts:
        - name: ssh
          mountPath: "/ssh"
        - name: ssh-root
          mountPath: "/etc/ssh-key"
      - name: gitconfig
        image: busybox
        command: ['/bin/sh', '-c', "chown -R 1000:1000 /etc && echo '[user]\n\temail = francesco.torchia@suse.com\n\tname = Francesco Torchia' > /home/coder/.gitconfig"]
        volumeMounts:
        - name: cfg
          mountPath: /home/coder/
{{- if $.Values.codeServer.extraInitContainers }}
{{ tpl $.Values.codeServer.extraInitContainers . | indent 6}}
{{- end }}
      {{- end }}
      containers:
{{- if $.Values.codeServer.extraContainers }}
{{ tpl $.Values.codeServer.extraContainers . | indent 8}}
{{- end }}
        - name: {{ $.Chart.Name }}
          image: "{{ $.Values.codeServer.image.repository }}:{{ $.Values.codeServer.image.tag }}"
          imagePullPolicy: {{ $.Values.codeServer.image.pullPolicy }}
          {{- if $.Values.codeServer.securityContext.enabled }}
          securityContext:
            runAsUser: {{ $.Values.codeServer.securityContext.runAsUser }}
          {{- end }}
          {{- if $.Values.codeServer.lifecycle.enabled }}
          lifecycle:
            {{- if $.Values.codeServer.lifecycle.postStart }}
            postStart:
              {{ toYaml $.Values.codeServer.lifecycle.postStart | nindent 14 }}
            {{- end }}
            {{- if $.Values.codeServer.lifecycle.preStop }}
            preStop:
              {{ toYaml $.Values.codeServer.lifecycle.preStop | nindent 14 }}
            {{- end }}
          {{- end }}
          env:
            - name: PASSWORD
              value: {{ $s.password | quote }}
        {{- if $.Values.codeServer.extraVars }}
{{ toYaml $.Values.codeServer.extraVars | indent 10 }}
        {{- end }}
        {{- if $.Values.codeServer.extraArgs }}
          args:
{{ toYaml $.Values.codeServer.extraArgs | indent 10 }}
        {{- end }}
          volumeMounts:
          - name: ssh-root
            mountPath: "/home/coder/.ssh"
          - name: data
            mountPath: /git
          - name: cfg
            mountPath: /home/coder
          {{- range $.Values.codeServer.extraConfigmapMounts }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            subPath: {{ .subPath | default "" }}
            readOnly: {{ .readOnly }}
          {{- end }}
          {{- range $.Values.codeServer.extraSecretMounts }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            subPath: {{ .subPath | default "" }}
            readOnly: {{ .readOnly }}
          {{- end }}
          {{- range $.Values.codeServer.extraVolumeMounts }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            subPath: {{ .subPath | default "" }}
            readOnly: {{ .readOnly }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- range $.Values.codeServer.extraPorts }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol }}
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: 8080
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: 8080
            failureThreshold: 5
          resources:
            {{- toYaml $.Values.codeServer.resources | nindent 12 }}
      {{- with $.Values.codeServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with $.Values.codeServer.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
    {{- end }}
    {{- with $.Values.codeServer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "code-editor.serviceAccountName" $ }}
      volumes:
      - name: ssh
        secret:
          secretName: secret-ssh-auth
      - name: ssh-root
        emptyDir: {}
      - name: cfg
        emptyDir: {}
      - name: data
      {{- if $.Values.codeServer.persistence.enabled }}
        {{- if not $.Values.codeServer.persistence.hostPath }}
        persistentVolumeClaim:
          claimName: {{ $.Values.codeServer.persistence.existingClaim | default (include "code-editor.fullname" $) }}
        {{- else }}
        hostPath:
          path: {{ $.Values.codeServer.persistence.hostPath }}
          type: Directory
        {{- end -}}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      {{- range $.Values.codeServer.extraSecretMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
          defaultMode: {{ .defaultMode }}
      {{- end }}
      {{- range $.Values.codeServer.extraConfigmapMounts }}
      - name: {{ .name }}
        configMap:
          name: {{ .configMap }}
          defaultMode: {{ .defaultMode }}
      {{- end }}
      {{- range $.Values.codeServer.extraVolumeMounts }}
      - name: {{ .name }}
        {{- if .existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .existingClaim }}
        {{- else }}
        hostPath:
          path: {{ .hostPath }}
          type: Directory
        {{- end }}
      {{- end }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    app: server
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      serviceAccountName: server
      containers:
      - env:
        - name: PORT
          value: {{ quote .Values.server.server.env.port }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: API_SECRET
          value: {{ quote .Values.server.server.env.api.secret }}
        - name: API_TOKEN_EXPIRATION
          value: {{ quote .Values.server.server.env.api.tokenExpiration }}
        image: {{ .Values.server.server.image.repository }}:{{ .Values.server.server.image.tag
          | default .Chart.AppVersion }}
        name: server
        imagePullPolicy: {{ .Values.server.server.image.pullPolicy }}
        resources: {}
        volumeMounts:
        - name: users
          mountPath: "/server/assets"
          readOnly: true
      volumes:
        - name: users
          configMap:
            name: code-editor-users
            items:
            - key: users
              path: users

