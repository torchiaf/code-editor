kubernetesClusterDomain: cluster.local

domain: localhost

authentication:
  type: local
  # type: external
  # url: "https://164.92.187.105.sslip.io/v3/users?me=true"
  # token:
  #   type: headers
  #   key: Cookie
  # # jq syntax
  # query: ".data[0].username"

users:
  - name: admin
    password: password1234
    isAdmin: true
  - name: user1
    password: password1
  - name: user2
    password: password2
  - name: user3
    password: password3
  - name: user4
    password: password4

ssh:
  image:
    repository: kroniak/ssh-client
    tag: latest

codeServer:

  replicas: 0

  image:
    repository: codercom/code-server
    tag: '4.89.1'
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  hostnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  priorityClassName: ""

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: localhost
        paths:
          - /
    ingressClassName: ""
    tls:
      - secretName: code-editor
        hosts:
          - localhost

  # Optional additional arguments
  extraArgs:
    - --disable-telemetry
    - --disable-getting-started-override
    - --disable-workspace-trust
    # - --install-extension
    # - hoovercj.vscode-power-mode
    # - --auth
    # - none
    # These are the arguments normally passed to code-editor; run
    # code-editor --help for a list of available options.
    #
    # Each argument and parameter must have its own entry; if you use
    # --param value on the command line, then enter it here as:
    #
    # - --param
    # - value
    #
    # If you receive an error like "Unknown option --param value", it may be
    # because both the parameter and value are specified as a single argument,
    # rather than two separate arguments (e.g. "- --param value" on a line).

  # Optional additional environment variables
  extraVars: []
    # - name: PUID
    #   value: 1000
    # - name: PGID
    #   value: 1000
    # - name: TZ
    #   value: "Etc/UTC"
  #  - name: DISABLE_TELEMETRY
  #    value: true
  #  - name: DOCKER_HOST
  #    value: "tcp://localhost:2375"

  ##
  ## Init containers parameters:
  ## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
  ##
  volumePermissions:
    enabled: false
    securityContext:
      runAsUser: 0

  ## Pod Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext:
    enabled: true
    fsGroup: 1000
    runAsUser: 1000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 1000Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## Persist data to a persistent volume
  persistence:
    enabled: false
    ## code-editor data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 10Gi
    annotations: {}
    # existingClaim: ""
    # hostPath: /data

  lifecycle:
    enabled: false
    # postStart:
    #  exec:
    #    command:
    #      - /bin/bash
    #      - -c
    #      - curl -s -L SOME_SCRIPT | bash

  ## Enable an Specify container in extraContainers.
  ##Â This is meant to allow adding code-editor dependencies, like docker-dind.
  extraContainers: |
  # If docker-dind is used, DOCKER_HOST env is mandatory to set in "extraVars"
  #- name: docker-dind
  #  image: docker:19.03-dind
  #  imagePullPolicy: IfNotPresent
  #  resources:
  #    requests:
  #      cpu: 250m
  #      memory: 256M
  #  securityContext:
  #    privileged: true
  #    procMount: Default
  #  env:
  #  - name: DOCKER_TLS_CERTDIR
  #    value: ""
  #  - name: DOCKER_DRIVER
  #    value: "overlay2"

  ## Additional code-editor secret mounts
  extraSecretMounts: []
    # - name: secret-files
    #   mountPath: /etc/secrets
    #   subPath: private.key # (optional)
    #   secretName: code-editor-secret-files
    #   readOnly: true

  ## Additional code-editor volume mounts
  extraVolumeMounts: []
    # - name: extra-volume
    #   mountPath: /mnt/volume
    #   readOnly: true
    #   existingClaim: volume-claim
    #   hostPath: ""

  extraConfigmapMounts: []
    # - name: certs-configmap
    #   mountPath: /etc/code-editor/ssl/
    #   subPath: certificates.crt # (optional)
    #   configMap: certs-configmap
    #   readOnly: true

  extraPorts: []
    # - name: minecraft
    #   port: 25565
    #   protocol: tcp

server:
  server:
    env:
      port: "8082"
      api:
        secret: france
        tokenExpiration: 24
    image:
      repository: ghcr.io/torchiaf/code-editor/server
      tag: v0.1.2
      pullPolicy: Always
  ports:
  - port: 8082
    protocol: TCP
    targetPort: 8082
  replicas: 1
  type: ClusterIP

console:
  enabled: true
  dev:
    url: http://localhost:4200
  replicas: 1
  type: ClusterIP
  image:
    repository: ghcr.io/torchiaf/code-editor/console
    tag: v0.1.2
    pullPolicy: Always
  env:
    baseHref: "/code-editor/console/"
  ports:
  - port: 8083
    protocol: TCP
    targetPort: 80

